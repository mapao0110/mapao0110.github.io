<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>deep learning</title>
    <url>/2023/10/31/deep-learning/</url>
    <content><![CDATA[<hr>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><ul>
<li><a href="https://mapao0110.github.io/2023/10/29/machine-learn/">相关博文</a></li>
<li>个人微信公众号： Mn2+</li>
<li><a href="https://blog.csdn.net/Mnpao?type=blog">个人博客首页</a></li>
<li>注：学习交流使用！<span id="more"></span></li>
</ul>
<hr>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>1、深度学习、机器学习、目标检测<br>2、将持续更新</p>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="">参考资料1</a></li>
<li><a href="">参考资料2</a></li>
</ul>
<hr>
<h2 id="交个朋友"><a href="#交个朋友" class="headerlink" title="交个朋友"></a>交个朋友</h2><ul>
<li><p>个人微信公众号：Mn2+</p>
</li>
<li><p>哔哩哔哩：不爱码字的小懒马儿</p>
</li>
<li><p><a href="https://github.com/mapao0110/mapao0110.github.io">GitHub</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
        <category>计算机视觉</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>计算机视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>PyTorch01</title>
    <url>/2023/10/31/PyTorch01/</url>
    <content><![CDATA[<hr>
<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><ul>
<li><a href="https://mapao0110.github.io/2023/10/29/machine-learn/">相关博文</a></li>
<li>个人微信公众号： Mn2+</li>
<li><a href="https://blog.csdn.net/Mnpao?type=blog">个人博客首页</a></li>
<li>注：学习交流使用！<span id="more"></span></li>
</ul>
<hr>
<h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ol>
<li><p>计算图：用来描述运算的有向无环图<br>（1）计算图有两个主要元素：结点（Node）和边（Edge）；<br>（2）结点表示数据，如向量、矩阵、张量，边表示运算，如加减乘除卷积等；<br><img src="/pic/jstu.png" alt="计算图表示"><br>（3）PyTorch基于动态图，TensorFlow基于静态图<br>静态图框架好比C++，每次修改之后运行都要重新编译才行，动态图框架好比Python，动态执行，可以交互式查看修改。</p>
</li>
<li><p>节点和结点的区别：节点，被认为是一个实体，有处理能力，比如：网络上的一台计算机；而结点则只是一个交叉点，像“结绳记事”，打个结，做个标记，仅此而已，一般算法中点的都是结点。</p>
</li>
<li><p>PyTorch的设计遵循tensor-&gt;variable(autograd)-&gt;nn.Module三个由低到高的抽象层次，分别代表高维数组（张量）、自动求导（变量）和神经网络（层/模块）。</p>
</li>
</ol>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><a href="">参考资料1</a></li>
<li><a href="">参考资料2</a></li>
</ul>
<hr>
<h2 id="关注"><a href="#关注" class="headerlink" title="关注"></a>关注</h2><ul>
<li><p>个人微信公众号：Mn2+</p>
</li>
<li><p>哔哩哔哩：不爱码字的小懒马儿</p>
</li>
<li><p><a href="https://github.com/mapao0110/mapao0110.github.io">GitHub</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
        <category>PyTorch</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
        <tag>PyTorch</tag>
      </tags>
  </entry>
  <entry>
    <title>machine learning</title>
    <url>/2023/10/29/machine-learn/</url>
    <content><![CDATA[<p>大家好，我是马跑~~</p>
<p>本文目标：带大家学会机器学习</p>
<p>深度学习、计算机视觉、目标检测<br>欢迎大家留言讨论</p>
<span id="more"></span>
<p>机器学习非常简单，无所谓！我会出手。</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo-GitHub</title>
    <url>/2023/10/29/hexo-github/</url>
    <content><![CDATA[<p>使用hexo创建博文，然后部署到GitHub<br>1、新建博文：hexo new ‘xxx’<br>2、清除缓存文件：hexo clean<br>3、生成网站静态文件到默认设置的 public 文件夹：hexo g<br>4、自动生成网站静态文件，并部署到设定的仓库：hexo d<br>5、本地浏览：hexo s<br>6、hexo插入图片：在Hexo的目录source中创建一个图片文件夹，例如pic。<br>把你要插入的图片文件放到该目录下面，在你的文章中正常使用markdown的语法插入图片即可</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![img](&#x2F;pic&#x2F;xxx.png)</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>欢迎大家留言讨论</p>
<span id="more"></span>
<p>机器学习非常简单，无所谓！我会出手。</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
